name: Deploy Infrastructure

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permet un déclenchement manuel

jobs:
  terraform:
    name: "Provisionner Proxmox avec Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du repo
        uses: actions/checkout@v3

      - name: Installer Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialiser Terraform
        run: terraform init
        working-directory: terraform

      - name: Appliquer Terraform
        run: |
          terraform apply -auto-approve \
            -var "pm_api_url=${{ secrets.PM_API_URL }}" \
            -var "pm_api_token_id=${{ secrets.PM_API_TOKEN_ID }}" \
            -var "pm_api_token_secret=${{ secrets.PM_API_TOKEN_SECRET }}" \
            -var "proxmox_public_ip=${{ secrets.PROXMOX_PUBLIC_IP }}"
        working-directory: terraform

      - name: Récupérer l’IP publique de Proxmox
        run: |
          echo "PROXMOX_PUBLIC_IP=${{ secrets.PROXMOX_PUBLIC_IP }}" >> $GITHUB_ENV

  ansible:
    name: "Configurer les VMs avec Ansible"
    runs-on: ubuntu-latest
    needs: terraform  # Exécute Ansible seulement si Terraform a réussi
    steps:
      - name: Checkout du repo
        uses: actions/checkout@v3

      - name: Installer Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Configurer l'inventaire Ansible
        run: |
          echo "[proxmox]" > ansible/inventory/proxmox.ini
          echo "${{ env.PROXMOX_PUBLIC_IP }} ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory/proxmox.ini

      - name: Exécuter Ansible Playbook
        run: ansible-playbook -i ansible/inventory/proxmox.ini ansible/playbooks/setup.yml
